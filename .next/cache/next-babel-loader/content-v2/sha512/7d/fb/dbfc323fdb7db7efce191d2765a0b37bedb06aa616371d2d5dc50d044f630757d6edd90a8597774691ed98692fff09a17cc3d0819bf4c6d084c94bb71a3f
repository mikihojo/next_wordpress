{"ast":null,"code":"import { getPreviewPost } from '../../lib/api';\nexport default async function preview(req, res) {\n  const {\n    secret,\n    id,\n    slug\n  } = req.query; // Check the secret and next parameters\n  // This secret should only be known by this API route\n\n  if (!process.env.WORDPRESS_PREVIEW_SECRET || secret !== process.env.WORDPRESS_PREVIEW_SECRET || !id && !slug) {\n    return res.status(401).json({\n      message: 'Invalid token'\n    });\n  } // Fetch WordPress to check if the provided `id` or `slug` exists\n\n\n  const post = await getPreviewPost(id || slug, id ? 'DATABASE_ID' : 'SLUG'); // If the post doesn't exist prevent preview mode from being enabled\n\n  if (!post) {\n    return res.status(401).json({\n      message: 'Post not found'\n    });\n  } // Enable Preview Mode by setting the cookies\n\n\n  res.setPreviewData({\n    post: {\n      id: post.databaseId,\n      slug: post.slug,\n      status: post.status\n    }\n  }); // Redirect to the path from the fetched post\n  // We don't redirect to `req.query.slug` as that might lead to open redirect vulnerabilities\n\n  res.writeHead(307, {\n    Location: `/posts/${post.slug || post.databaseId}`\n  });\n  res.end();\n}","map":{"version":3,"sources":["/home/vagrant/next_dir/cms-wordpress-app/pages/api/preview.js"],"names":["getPreviewPost","preview","req","res","secret","id","slug","query","process","env","WORDPRESS_PREVIEW_SECRET","status","json","message","post","setPreviewData","databaseId","writeHead","Location","end"],"mappings":"AAAA,SAASA,cAAT,QAA+B,eAA/B;AAEA,eAAe,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC9C,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,EAAV;AAAcC,IAAAA;AAAd,MAAuBJ,GAAG,CAACK,KAAjC,CAD8C,CAG9C;AACA;;AACA,MACE,CAACC,OAAO,CAACC,GAAR,CAAYC,wBAAb,IACAN,MAAM,KAAKI,OAAO,CAACC,GAAR,CAAYC,wBADvB,IAEC,CAACL,EAAD,IAAO,CAACC,IAHX,EAIE;AACA,WAAOH,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArB,CAAP;AACD,GAX6C,CAa9C;;;AACA,QAAMC,IAAI,GAAG,MAAMd,cAAc,CAACK,EAAE,IAAIC,IAAP,EAAaD,EAAE,GAAG,aAAH,GAAmB,MAAlC,CAAjC,CAd8C,CAgB9C;;AACA,MAAI,CAACS,IAAL,EAAW;AACT,WAAOX,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArB,CAAP;AACD,GAnB6C,CAqB9C;;;AACAV,EAAAA,GAAG,CAACY,cAAJ,CAAmB;AACjBD,IAAAA,IAAI,EAAE;AACJT,MAAAA,EAAE,EAAES,IAAI,CAACE,UADL;AAEJV,MAAAA,IAAI,EAAEQ,IAAI,CAACR,IAFP;AAGJK,MAAAA,MAAM,EAAEG,IAAI,CAACH;AAHT;AADW,GAAnB,EAtB8C,CA8B9C;AACA;;AACAR,EAAAA,GAAG,CAACc,SAAJ,CAAc,GAAd,EAAmB;AAAEC,IAAAA,QAAQ,EAAG,UAASJ,IAAI,CAACR,IAAL,IAAaQ,IAAI,CAACE,UAAW;AAAnD,GAAnB;AACAb,EAAAA,GAAG,CAACgB,GAAJ;AACD","sourcesContent":["import { getPreviewPost } from '../../lib/api'\n\nexport default async function preview(req, res) {\n  const { secret, id, slug } = req.query\n\n  // Check the secret and next parameters\n  // This secret should only be known by this API route\n  if (\n    !process.env.WORDPRESS_PREVIEW_SECRET ||\n    secret !== process.env.WORDPRESS_PREVIEW_SECRET ||\n    (!id && !slug)\n  ) {\n    return res.status(401).json({ message: 'Invalid token' })\n  }\n\n  // Fetch WordPress to check if the provided `id` or `slug` exists\n  const post = await getPreviewPost(id || slug, id ? 'DATABASE_ID' : 'SLUG')\n\n  // If the post doesn't exist prevent preview mode from being enabled\n  if (!post) {\n    return res.status(401).json({ message: 'Post not found' })\n  }\n\n  // Enable Preview Mode by setting the cookies\n  res.setPreviewData({\n    post: {\n      id: post.databaseId,\n      slug: post.slug,\n      status: post.status,\n    },\n  })\n\n  // Redirect to the path from the fetched post\n  // We don't redirect to `req.query.slug` as that might lead to open redirect vulnerabilities\n  res.writeHead(307, { Location: `/posts/${post.slug || post.databaseId}` })\n  res.end()\n}\n"]},"metadata":{},"sourceType":"module"}